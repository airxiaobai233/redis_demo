<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 配置注解所在的包 -->
	<context:component-scan base-package="com.xja.redis"></context:component-scan>
	<!-- 启动注解驱动类 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- 数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/redis_demo?useUnicode=true&amp;characterEncoding=UTF8"/>
		<property name="username" value="root" />
		<property name="password" value="a980420165"></property>
	</bean>
	<!-- SQLSession工厂 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:com/xja/redis/mapper/*.xml"></property>
	</bean>
	<!-- Mapper代理对象 -->
	<!-- 通过代理配置所有的Mapper对象 会生成com.oracle.dao包下面的所有mapper类对象，默认对象的id是接口名称首字母小写 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
		<property name="basePackage" value="com.xja.redis.mapper"/>
	</bean>
	<!-- 事务管理器对象 :为业务对象生成代理对象，为业务提供统一的事务管理 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 生成业务对象 -->
	<context:annotation-config />
	<context:component-scan base-package="com.xja.redis" />
	<!-- 配置TX -->
	<tx:advice id="myadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 必须依赖一个事务  如果没有事务就先创建一个事务，如果有就直接用 -->
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<!-- 只读事务-->
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置AOP -->
	<aop:config>
		<aop:pointcut id="mypointcut" expression="execution(* com.xja.redis.service.impl.*.*(..))"/>
		<aop:advisor advice-ref="myadvice" pointcut-ref="mypointcut"/>
	</aop:config>
</beans>